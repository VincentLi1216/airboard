# Optional - The name of the workflow as it will appear in the "Actions" tab of the GitHub repository. If this field is omitted, the name of the workflow file will be used instead.
name: unittest

# Specifies the trigger for this workflow. This example uses the `push` event, so a workflow run is triggered every time someone pushes a change to the repository or merges a pull request.  This is triggered by a push to every branch; for examples of syntax that runs only on pushes to specific branches, paths, or tags, see "[AUTOTITLE](/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore)."
on:
    push:
        branches:
            - "*"
    workflow_dispatch:

# Groups together all the jobs that run in the `learn-github-actions` workflow.
jobs:
    # Defines a job named `check-bats-version`. The child keys will define properties of the job.
    run_tests:
        # Configures the job to run on the latest version of an Ubuntu Linux runner. This means that the job will execute on a fresh virtual machine hosted by GitHub. For syntax examples using other runners, see "[AUTOTITLE](/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on)"
        runs-on: ubuntu-latest

        # Groups together all the steps that run in the `check-bats-version` job. Each item nested under this section is a separate action or shell script.
        steps:
            # The `uses` keyword specifies that this step will run `v4` of the `actions/checkout` action. This is an action that checks out your repository onto the runner, allowing you to run scripts or other actions against your code (such as build and test tools). You should use the checkout action any time your workflow will use the repository's code.
            - uses: actions/checkout@v4
            - name: set up virtualenv
              run: |

                pwd
                ls -al
                pip install virtualenv
                virtualenv venv
            - name: Install dependencies
              run: |
                source venv/bin/activate && pip install -r requirements.txt
            - name: Run tests with unittest
              run: |
                source venv/bin/activate && python3 unittest.py

            - run: |
                echo "Running the tests successfully"